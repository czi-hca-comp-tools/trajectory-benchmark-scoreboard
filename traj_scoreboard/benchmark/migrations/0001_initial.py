# Generated by Django 2.1.3 on 2018-11-18 19:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Challenges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('docker_container', models.CharField(max_length=1000)),
                ('image', models.CharField(blank=True, max_length=1000, null=True)),
                ('data_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('data_size', models.CharField(blank=True, max_length=1000, null=True)),
                ('color', models.CharField(blank=True, max_length=1000, null=True)),
                ('about', models.CharField(blank=True, max_length=1000, null=True)),
                ('example_file', models.CharField(blank=True, max_length=1000, null=True)),
                ('submission_header', models.TextField(blank=True, null=True)),
                ('submission_separator', models.CharField(blank=True, max_length=1000, null=True)),
                ('scores', models.TextField(blank=True, null=True)),
                ('subscores', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_open', models.BooleanField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'challenges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datasets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('tree', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'datasets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('results_path', models.CharField(max_length=1000)),
                ('score_data', models.TextField(blank=True, null=True)),
                ('is_current', models.BooleanField()),
                ('submission_date', models.DateTimeField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Submissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('repository', models.CharField(max_length=1000)),
                ('is_private', models.BooleanField()),
                ('institution', models.CharField(blank=True, max_length=1000, null=True)),
                ('publication', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_accepted', models.BooleanField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'submissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_username', models.CharField(max_length=1000)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_admin', models.BooleanField()),
                ('create_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
